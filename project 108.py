# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gZ5jkHHg6kdVDedI6r-GKxlrT4UMnIhU
"""

import random
import plotly.express as px
import plotly.figure_factory as ff
import statistics
dicetotal=[]
count=[]
for i in range(0,1000):
    d1=random.randint(1,6)
    d2=random.randint(1,6)
    dicetotal.append(d1+d2)
    count.append(i)

mean=statistics.mean(dicetotal)
median=statistics.median(dicetotal)
mode=statistics.mode(dicetotal)
standereddeviation=statistics.stdev(dicetotal)
print("mean:"+str(mean))
print("median:"+str(median))
print("mode:"+str(mode))
print("standereddeviation:"+str(standereddeviation))
fig=ff.create_distplot([dicetotal],["results"])
fig.show()
first_stdv_start,first_stdv_end=mean-(standereddeviation),mean+standereddeviation
list_of_data_within_1_std_deviation = [result for result in dicetotal if result > first_stdv_start and result < first_stdv_end]
second_stdv_start,second_stdv_end=mean-(standereddeviation*2),mean+(standereddeviation*2)
list_of_data_within_2_std_deviation = [result for result in dicetotal if result > second_stdv_start and result < second_stdv_end]
print("{}%offdataliesnandereddaviation".format(len(list_of_data_within_1_std_deviation)*100/len(dicetotal)))
print("{}%offdataliesnandereddaviation".format(len(list_of_data_within_2_std_deviation)*100/len(dicetotal)))
third_stdv_start,third_stdv_end=mean-(standereddeviation*3),mean+(standereddeviation*3)
list_of_data_within_3_std_deviation = [result for result in dicetotal if result > third_stdv_start and result < third_stdv_end]
print("{}%offdataliesnandereddaviation".format(len(list_of_data_within_3_std_deviation)*100/len(dicetotal)))